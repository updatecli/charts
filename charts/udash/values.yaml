# Default values for udash.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
#
replicaCount: 1
images:
  server:
    repository: ghcr.io/updatecli/udash
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: v0.10.0@sha256:7b0bba19f47ee88c24b9ee6f1394591f04eff9d665bbb6dc53baab15955155a3
    command:
      - "udash"
    args:
      - "server"
      - "start"
  front:
    repository: ghcr.io/updatecli/udash-front
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: v0.10.1@sha256:db48d39a0c06c79e84e0ed19b0c592a3940d8932e1bdff0939a31fe417928a48
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
# The name of the configMap used to store front config.js file.
# If not set, a name is generated using the fullname template
configMap:
  name: ""
  # Annotations to add to the configmap
  annotations: {}
# The name of the secret used to store agent enviroment variables.
# If not set, a name is generated using the fullname template
secrets:
  name: ""
  database:
    # Annotations to add to the database secret
    annotations: {}
    stringdata:
      uri: postgres://postgres:5432/udash?sslmode=disable
  auth:
    # Annotations to add to the auth secret
    annotations: {}
    stringdata:
      mode: oauth
      clientid: xxx.example
      audience: https://udash.example/api
      issuer: https://oauth.example
podAnnotations: {}
podSecurityContext: {}
# fsGroup: 2000
securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000
ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: udash.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
service:
  type: ClusterIP
  port: 80
readonly: true
