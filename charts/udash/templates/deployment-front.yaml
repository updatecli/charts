apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "udash.fullname" . }}-front
  labels:
    {{- include "udash.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "udash.selectorLabels.front" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-front.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "udash.selectorLabels.front" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "udash.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-front
          env:
            - name: VUE_APP_AUTH_ENABLED
        {{- if .Values.readonly }}
              value: "false"
        {{- else }}
              value: "true"
        {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.front.repository }}:{{ .Values.images.front.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.images.front.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if not .Values.readonly }}
          volumeMounts:
            - name: "configjson"
              mountPath: "/usr/share/nginx/html/config.json"
              subPath: config.json
            - name: "configjs"
              mountPath: "/usr/share/nginx/html/config.js"
              subPath: config.js
          {{- end }}
      {{- if not .Values.readonly}}
      volumes:
        - name: configjson
          configMap:
            name: {{ include "udash.configMapName" . }}-front
            items:
              - key: config.json
                path: config.json
        - name: configjs
          configMap:
            name: {{ include "udash.configMapName" . }}-front
            items:
              - key: config.js
                path: config.js
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
